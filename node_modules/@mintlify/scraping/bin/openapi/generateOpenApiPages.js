import { validate } from '@mintlify/common';
import { getOpenApiDefinition, processOpenApiPath, DEFAULT_API_GROUP_NAME, } from './common.js';
export async function generateOpenApiPages(pathOrDocumentOrUrl, opts) {
    const { document, isUrl } = await getOpenApiDefinition(pathOrDocumentOrUrl);
    const { schema } = await validate(document);
    if (schema?.paths === undefined || Object.keys(schema.paths).length === 0) {
        throw new Error('No paths defined.');
    }
    const nav = [];
    const decoratedNav = [];
    const writePromises = [];
    const pagesAcc = {};
    Object.entries(schema.paths).forEach(([path, pathItemObject]) => {
        if (!pathItemObject || typeof pathItemObject !== 'object') {
            return;
        }
        processOpenApiPath(path, pathItemObject, schema, nav, decoratedNav, writePromises, pagesAcc, opts ?? {}, findNavGroup);
    });
    await Promise.all(writePromises);
    return {
        nav,
        decoratedNav,
        spec: schema,
        pagesAcc,
        isUrl,
    };
}
const findNavGroup = (nav, groupName = DEFAULT_API_GROUP_NAME) => {
    const group = nav.find((fileOrGroup) => typeof fileOrGroup === 'object' && 'group' in fileOrGroup && fileOrGroup.group === groupName);
    if (group === undefined) {
        const newGroup = {
            group: groupName,
            pages: [],
        };
        nav.push(newGroup);
        return newGroup.pages;
    }
    else {
        return group.pages;
    }
};
//# sourceMappingURL=generateOpenApiPages.js.map