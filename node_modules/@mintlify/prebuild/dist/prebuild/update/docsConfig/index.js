import { getConfigPath } from '../../../utils.js';
import { DocsConfigUpdater } from '../ConfigUpdater.js';
import { generateOpenApiDivisions } from './generateOpenApiDivisions.js';
export async function updateDocsConfigFile(contentDirectoryPath, openApiFiles, docsConfig) {
    const configPath = await getConfigPath(contentDirectoryPath, 'docs');
    if (configPath == null && docsConfig == null) {
        throw Error('Must be run in a directory where a docs.json file exists.');
    }
    if (docsConfig == null && configPath) {
        docsConfig = await DocsConfigUpdater.getConfig(configPath);
    }
    if (docsConfig == null) {
        throw Error('Must be run in a directory where a docs.json file exists.');
    }
    const { newDocsConfig, pagesAcc, openApiFiles: newOpenApiFiles, } = await generateOpenApiDivisions(docsConfig, openApiFiles);
    await DocsConfigUpdater.writeConfigFile(newDocsConfig);
    return { docsConfig: newDocsConfig, pagesAcc, newOpenApiFiles };
}
export { generateOpenApiDivisions, generateOpenApiFromDocsConfig, } from './generateOpenApiDivisions.js';
